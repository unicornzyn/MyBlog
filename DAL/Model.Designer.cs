//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace DAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class dbEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“dbEntities”部分中的连接字符串初始化新 dbEntities 对象。
        /// </summary>
        public dbEntities() : base("name=dbEntities", "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 dbEntities 对象。
        /// </summary>
        public dbEntities(string connectionString) : base(connectionString, "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 dbEntities 对象。
        /// </summary>
        public dbEntities(EntityConnection connection) : base(connection, "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Article> Article
        {
            get
            {
                if ((_Article == null))
                {
                    _Article = base.CreateObjectSet<Article>("Article");
                }
                return _Article;
            }
        }
        private ObjectSet<Article> _Article;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Feedback> Feedback
        {
            get
            {
                if ((_Feedback == null))
                {
                    _Feedback = base.CreateObjectSet<Feedback>("Feedback");
                }
                return _Feedback;
            }
        }
        private ObjectSet<Feedback> _Feedback;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<R_ArticleTags> R_ArticleTags
        {
            get
            {
                if ((_R_ArticleTags == null))
                {
                    _R_ArticleTags = base.CreateObjectSet<R_ArticleTags>("R_ArticleTags");
                }
                return _R_ArticleTags;
            }
        }
        private ObjectSet<R_ArticleTags> _R_ArticleTags;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Tags> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tags>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tags> _Tags;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Reply> Reply
        {
            get
            {
                if ((_Reply == null))
                {
                    _Reply = base.CreateObjectSet<Reply>("Reply");
                }
                return _Reply;
            }
        }
        private ObjectSet<Reply> _Reply;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Article EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToArticle(Article article)
        {
            base.AddObject("Article", article);
        }
    
        /// <summary>
        /// 用于向 Feedback EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFeedback(Feedback feedback)
        {
            base.AddObject("Feedback", feedback);
        }
    
        /// <summary>
        /// 用于向 R_ArticleTags EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToR_ArticleTags(R_ArticleTags r_ArticleTags)
        {
            base.AddObject("R_ArticleTags", r_ArticleTags);
        }
    
        /// <summary>
        /// 用于向 Tags EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToTags(Tags tags)
        {
            base.AddObject("Tags", tags);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// 用于向 Reply EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToReply(Reply reply)
        {
            base.AddObject("Reply", reply);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Article 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="title">title 属性的初始值。</param>
        /// <param name="content">content 属性的初始值。</param>
        /// <param name="addtime">addtime 属性的初始值。</param>
        public static Article CreateArticle(global::System.Int32 id, global::System.String title, global::System.String content, global::System.DateTime addtime)
        {
            Article article = new Article();
            article.id = id;
            article.title = title;
            article.content = content;
            article.addtime = addtime;
            return article;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String content
        {
            get
            {
                return _content;
            }
            set
            {
                OncontentChanging(value);
                ReportPropertyChanging("content");
                _content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("content");
                OncontentChanged();
            }
        }
        private global::System.String _content;
        partial void OncontentChanging(global::System.String value);
        partial void OncontentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime addtime
        {
            get
            {
                return _addtime;
            }
            set
            {
                OnaddtimeChanging(value);
                ReportPropertyChanging("addtime");
                _addtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("addtime");
                OnaddtimeChanged();
            }
        }
        private global::System.DateTime _addtime;
        partial void OnaddtimeChanging(global::System.DateTime value);
        partial void OnaddtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Feedback")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feedback : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Feedback 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="content">content 属性的初始值。</param>
        /// <param name="isread">isread 属性的初始值。</param>
        /// <param name="addtime">addtime 属性的初始值。</param>
        public static Feedback CreateFeedback(global::System.Int32 id, global::System.String content, global::System.Boolean isread, global::System.DateTime addtime)
        {
            Feedback feedback = new Feedback();
            feedback.id = id;
            feedback.content = content;
            feedback.isread = isread;
            feedback.addtime = addtime;
            return feedback;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String content
        {
            get
            {
                return _content;
            }
            set
            {
                OncontentChanging(value);
                ReportPropertyChanging("content");
                _content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("content");
                OncontentChanged();
            }
        }
        private global::System.String _content;
        partial void OncontentChanging(global::System.String value);
        partial void OncontentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isread
        {
            get
            {
                return _isread;
            }
            set
            {
                OnisreadChanging(value);
                ReportPropertyChanging("isread");
                _isread = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isread");
                OnisreadChanged();
            }
        }
        private global::System.Boolean _isread;
        partial void OnisreadChanging(global::System.Boolean value);
        partial void OnisreadChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime addtime
        {
            get
            {
                return _addtime;
            }
            set
            {
                OnaddtimeChanging(value);
                ReportPropertyChanging("addtime");
                _addtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("addtime");
                OnaddtimeChanged();
            }
        }
        private global::System.DateTime _addtime;
        partial void OnaddtimeChanging(global::System.DateTime value);
        partial void OnaddtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="R_ArticleTags")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class R_ArticleTags : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 R_ArticleTags 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="articleid">articleid 属性的初始值。</param>
        /// <param name="tagid">tagid 属性的初始值。</param>
        /// <param name="addtime">addtime 属性的初始值。</param>
        public static R_ArticleTags CreateR_ArticleTags(global::System.Int32 id, global::System.Int32 articleid, global::System.Int32 tagid, global::System.DateTime addtime)
        {
            R_ArticleTags r_ArticleTags = new R_ArticleTags();
            r_ArticleTags.id = id;
            r_ArticleTags.articleid = articleid;
            r_ArticleTags.tagid = tagid;
            r_ArticleTags.addtime = addtime;
            return r_ArticleTags;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 articleid
        {
            get
            {
                return _articleid;
            }
            set
            {
                OnarticleidChanging(value);
                ReportPropertyChanging("articleid");
                _articleid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("articleid");
                OnarticleidChanged();
            }
        }
        private global::System.Int32 _articleid;
        partial void OnarticleidChanging(global::System.Int32 value);
        partial void OnarticleidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 tagid
        {
            get
            {
                return _tagid;
            }
            set
            {
                OntagidChanging(value);
                ReportPropertyChanging("tagid");
                _tagid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tagid");
                OntagidChanged();
            }
        }
        private global::System.Int32 _tagid;
        partial void OntagidChanging(global::System.Int32 value);
        partial void OntagidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime addtime
        {
            get
            {
                return _addtime;
            }
            set
            {
                OnaddtimeChanging(value);
                ReportPropertyChanging("addtime");
                _addtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("addtime");
                OnaddtimeChanged();
            }
        }
        private global::System.DateTime _addtime;
        partial void OnaddtimeChanging(global::System.DateTime value);
        partial void OnaddtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Reply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reply : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Reply 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="articleId">ArticleId 属性的初始值。</param>
        /// <param name="rid">Rid 属性的初始值。</param>
        /// <param name="nick">Nick 属性的初始值。</param>
        /// <param name="content">Content 属性的初始值。</param>
        /// <param name="addTime">AddTime 属性的初始值。</param>
        public static Reply CreateReply(global::System.Int32 id, global::System.Int32 articleId, global::System.Int32 rid, global::System.String nick, global::System.String content, global::System.DateTime addTime)
        {
            Reply reply = new Reply();
            reply.Id = id;
            reply.ArticleId = articleId;
            reply.Rid = rid;
            reply.Nick = nick;
            reply.Content = content;
            reply.AddTime = addTime;
            return reply;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArticleId
        {
            get
            {
                return _ArticleId;
            }
            set
            {
                OnArticleIdChanging(value);
                ReportPropertyChanging("ArticleId");
                _ArticleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArticleId");
                OnArticleIdChanged();
            }
        }
        private global::System.Int32 _ArticleId;
        partial void OnArticleIdChanging(global::System.Int32 value);
        partial void OnArticleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rid
        {
            get
            {
                return _Rid;
            }
            set
            {
                OnRidChanging(value);
                ReportPropertyChanging("Rid");
                _Rid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rid");
                OnRidChanged();
            }
        }
        private global::System.Int32 _Rid;
        partial void OnRidChanging(global::System.Int32 value);
        partial void OnRidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nick
        {
            get
            {
                return _Nick;
            }
            set
            {
                OnNickChanging(value);
                ReportPropertyChanging("Nick");
                _Nick = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nick");
                OnNickChanged();
            }
        }
        private global::System.String _Nick;
        partial void OnNickChanging(global::System.String value);
        partial void OnNickChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTime
        {
            get
            {
                return _AddTime;
            }
            set
            {
                OnAddTimeChanging(value);
                ReportPropertyChanging("AddTime");
                _AddTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddTime");
                OnAddTimeChanged();
            }
        }
        private global::System.DateTime _AddTime;
        partial void OnAddTimeChanging(global::System.DateTime value);
        partial void OnAddTimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Tags")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tags : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Tags 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="tname">tname 属性的初始值。</param>
        /// <param name="sort">sort 属性的初始值。</param>
        /// <param name="addtime">addtime 属性的初始值。</param>
        public static Tags CreateTags(global::System.Int32 id, global::System.String tname, global::System.Int32 sort, global::System.DateTime addtime)
        {
            Tags tags = new Tags();
            tags.id = id;
            tags.tname = tname;
            tags.sort = sort;
            tags.addtime = addtime;
            return tags;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tname
        {
            get
            {
                return _tname;
            }
            set
            {
                OntnameChanging(value);
                ReportPropertyChanging("tname");
                _tname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tname");
                OntnameChanged();
            }
        }
        private global::System.String _tname;
        partial void OntnameChanging(global::System.String value);
        partial void OntnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 sort
        {
            get
            {
                return _sort;
            }
            set
            {
                OnsortChanging(value);
                ReportPropertyChanging("sort");
                _sort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sort");
                OnsortChanged();
            }
        }
        private global::System.Int32 _sort;
        partial void OnsortChanging(global::System.Int32 value);
        partial void OnsortChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime addtime
        {
            get
            {
                return _addtime;
            }
            set
            {
                OnaddtimeChanging(value);
                ReportPropertyChanging("addtime");
                _addtime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("addtime");
                OnaddtimeChanged();
            }
        }
        private global::System.DateTime _addtime;
        partial void OnaddtimeChanging(global::System.DateTime value);
        partial void OnaddtimeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Users 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="passwd">Passwd 属性的初始值。</param>
        /// <param name="userRole">UserRole 属性的初始值。</param>
        /// <param name="addTime">AddTime 属性的初始值。</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String userName, global::System.String passwd, global::System.Int32 userRole, global::System.DateTime addTime)
        {
            Users users = new Users();
            users.id = id;
            users.UserName = userName;
            users.Passwd = passwd;
            users.UserRole = userRole;
            users.AddTime = addTime;
            return users;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Passwd
        {
            get
            {
                return _Passwd;
            }
            set
            {
                OnPasswdChanging(value);
                ReportPropertyChanging("Passwd");
                _Passwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Passwd");
                OnPasswdChanged();
            }
        }
        private global::System.String _Passwd;
        partial void OnPasswdChanging(global::System.String value);
        partial void OnPasswdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRole
        {
            get
            {
                return _UserRole;
            }
            set
            {
                OnUserRoleChanging(value);
                ReportPropertyChanging("UserRole");
                _UserRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserRole");
                OnUserRoleChanged();
            }
        }
        private global::System.Int32 _UserRole;
        partial void OnUserRoleChanging(global::System.Int32 value);
        partial void OnUserRoleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTime
        {
            get
            {
                return _AddTime;
            }
            set
            {
                OnAddTimeChanging(value);
                ReportPropertyChanging("AddTime");
                _AddTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddTime");
                OnAddTimeChanged();
            }
        }
        private global::System.DateTime _AddTime;
        partial void OnAddTimeChanging(global::System.DateTime value);
        partial void OnAddTimeChanged();

        #endregion

    
    }

    #endregion

    
}
